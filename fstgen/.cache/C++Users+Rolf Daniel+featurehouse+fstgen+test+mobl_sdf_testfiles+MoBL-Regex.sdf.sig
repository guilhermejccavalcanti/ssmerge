module(unparameterized("MoBL-Regex"),[imports([module(unparameterized("Common"))])],[exports(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(conc-grammars(context-free-syntax([prod([lit("\"/\""),sort("Pattern"),lit("\"/\""),sort("Modifiers")],sort("Exp"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"RegExp\""))])))])),prod([sort("Branche")],sort("Pattern"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"SingleBranch\""))])))])),prod([sort("Pattern"),lit("\"|\""),sort("Pattern")],sort("Pattern"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"TupleBranch\""))]))),assoc(right),prefer]))]),sorts([sort("Branche")])),context-free-syntax([prod([iter(sort("Piece"))],sort("Branche"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Pieces\""))])))]))])),sorts([sort("Piece")])),context-free-syntax([prod([sort("Atom")],sort("Piece"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"SingleAtom\""))])))])),prod([sort("Atom"),sort("Quantifier")],sort("Piece"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"QuantifiedAtom\""))])))]))])),sorts([sort("Quantifier")])),context-free-syntax([prod([lit("\"{\""),sort("Integer"),lit("\"}\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"GreedyExactBound\""))])))])),prod([lit("\"{\""),sort("Integer"),lit("\",\""),lit("\"}\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"GreedyLowerBound\""))])))])),prod([lit("\"{\""),sort("Integer"),lit("\",\""),sort("Integer"),lit("\"}\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"GreedyLowerUpperBound\""))])))])),prod([lit("\"?\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"GreedyOnceOrNot\""))])))])),prod([lit("\"*\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"GreedyZeroOrMore\""))])))])),prod([lit("\"+\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"GreedyOneOrMore\""))])))])),prod([lit("\"{\""),sort("Integer"),lit("\"}?\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ReluctantExactBound\""))])))])),prod([lit("\"{\""),sort("Integer"),lit("\",\""),lit("\"}?\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ReluctantLowerBound\""))])))])),prod([lit("\"{\""),sort("Integer"),lit("\",\""),sort("Integer"),lit("\"}?\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ReluctantLowerUpperBound\""))])))])),prod([lit("\"??\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ReluctantOnceOrNot\""))])))])),prod([lit("\"*?\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ReluctantZeroOrMore\""))])))])),prod([lit("\"+?\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ReluctantOneOrMore\""))])))])),prod([lit("\"{\""),sort("Integer"),lit("\"}+\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PossessiveExactBound\""))])))])),prod([lit("\"{\""),sort("Integer"),lit("\",\""),lit("\"}+\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PossessiveLowerBound\""))])))])),prod([lit("\"{\""),sort("Integer"),lit("\",\""),sort("Integer"),lit("\"}+\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PossessiveLowerUpperBound\""))])))])),prod([lit("\"?+\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PossessiveOnceOrNot\""))])))])),prod([lit("\"*+\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PossessiveZeroOrMore\""))])))])),prod([lit("\"++\"")],sort("Quantifier"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PossessiveOneOrMore\""))])))]))])),sorts([sort("Atom")])),context-free-syntax([prod([lit("\"(\""),sort("Pattern"),lit("\")\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Capture\""))])))])),prod([lit("\"(?:\""),sort("Pattern"),lit("\")\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NonCapture\""))])))])),prod([lit("\"(?=\""),sort("Pattern"),lit("\")\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PositiveLookahead\""))])))])),prod([lit("\"(?!\""),sort("Pattern"),lit("\")\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NegativeLookahead\""))])))])),prod([lit("\"(?<=\""),sort("Pattern"),lit("\")\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PositiveLookbehind\""))])))])),prod([lit("\"(?<!\""),sort("Pattern"),lit("\")\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NegativeLookbehind\""))])))])),prod([lit("\"(?P<\""),sort("RegexId"),lit("\">\""),sort("Pattern"),lit("\")\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PythonCapture\""))])))])),prod([lit("\"(\""),sort("Pattern"),lit("\")@{\""),sort("RegexId"),lit("\"}\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"RegexCapture\""))])))])),prod([lit("\"()\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Empty\""))])))])),prod([lit("\".\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"SingleCharacter\""))])))])),prod([lit("\"^\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"LineStart\""))])))])),prod([lit("\"$\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"LineEnd\""))])))])),prod([sort("CharacterClass")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"CharacterClass\""))])))])),prod([sort("AtomLiteral")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"AtomLiteral\""))])))])),prod([sort("AtomCharacter")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"AtomCharacter\""))])))])),prod([lit("\"\\\\Q\""),sort("AllChars"),lit("\"\\\\E\"")],sort("Atom"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"QuotedAtom\""))])))]))])),sorts([sort("CharacterClass"),sort("BracketItem")])),context-free-syntax([prod([lit("\"[\""),iter(sort("BracketItem")),lit("\"]\"")],sort("CharacterClass"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"BracketList\""))])))])),prod([lit("\"[^\""),iter(sort("BracketItem")),lit("\"]\"")],sort("CharacterClass"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NegatedBracketList\""))])))])),prod([alt(sort("BracketLiteral"),sort("BracketCharacter")),lit("\"-\""),alt(sort("BracketLiteral"),sort("BracketCharacter"))],sort("BracketItem"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Range\""))])))])),prod([sort("CharacterClass")],sort("BracketItem"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Union\""))])))])),prod([sort("BracketLiteral")],sort("BracketItem"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"BracketLiteral\""))])))])),prod([sort("BracketCharacter")],sort("BracketItem"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"BracketCharacter\""))])))]))])),sorts([sort("ClassKeyword")])),context-free-syntax([prod([lit("\"Lower\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"LowerClass\""))])))])),prod([lit("\"Upper\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"UpperClass\""))])))])),prod([lit("\"ASCII\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ASCIIClass\""))])))])),prod([lit("\"Alpha\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"AlphaClass\""))])))])),prod([lit("\"Digit\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"DigitClass\""))])))])),prod([lit("\"Alnum\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"AlnumClass\""))])))])),prod([lit("\"Punct\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PunctClass\""))])))])),prod([lit("\"Graph\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"GraphClass\""))])))])),prod([lit("\"Print\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PrintClass\""))])))])),prod([lit("\"Blank\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"BlankClass\""))])))])),prod([lit("\"Cntrl\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"CntrlClass\""))])))])),prod([lit("\"XDigit\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"XDigitClass\""))])))])),prod([lit("\"Space\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"WhiteSpace\""))])))])),prod([lit("\"javaLowerCase\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"JavaIsLowerCase\""))])))])),prod([lit("\"javaUpperCase\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"JavaIsLowerCase\""))])))])),prod([lit("\"javaWhitespace\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"JavaIsWhitespace\""))])))])),prod([lit("\"javaMirrored\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"JavaIsMirrored\""))])))])),prod([lit("\"InGreek\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"GreekBlock\""))])))])),prod([lit("\"Lu\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"UppercaseLetter\""))])))])),prod([lit("\"Sc\"")],sort("ClassKeyword"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"CurrencySymbol\""))])))]))])),sorts([sort("BracketLiteral"),sort("AtomLiteral"),sort("AllChars")])),lexical-syntax([prod([char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\!"),conc(short("\\#"),conc(short("\\%"),conc(short("\\'"),conc(short("\\,"),conc(short("\\:"),conc(short("\\;"),conc(short("\\<"),conc(short("\\="),conc(short("\\>"),conc(short("\\@"),conc(short("\\_"),conc(short("\\`"),conc(short("\\~"),conc(short("\\$"),conc(short("\\*"),conc(short("\\+"),conc(short("\\?"),conc(short("\\."),conc(short("\\}"),short("\\|")))))))))))))))))))))))))))],sort("BracketLiteral"),no-attrs),prod([lit("\"/\"")],sort("BracketLiteral"),no-attrs),prod([char-class(simple-charclass(present(conc(short("\\&"),conc(short("\\]"),short("\\-"))))))],sort("BracketLiteral"),attrs([reject])),prod([char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\!"),conc(short("\\#"),conc(short("\\%"),conc(short("\\'"),conc(short("\\,"),conc(short("\\:"),conc(short("\\;"),conc(short("\\<"),conc(short("\\="),conc(short("\\>"),conc(short("\\@"),conc(short("\\_"),conc(short("\\`"),conc(short("\\~"),conc(short("\\&"),conc(short("\\]"),short("\\-")))))))))))))))))))))))],sort("AtomLiteral"),no-attrs),prod([lit("\"/\"")],sort("AtomLiteral"),no-attrs),prod([char-class(simple-charclass(present(conc(short("\\}"),conc(short("\\)"),conc(short("\\|"),short("\\[")))))))],sort("AtomLiteral"),attrs([reject])),prod([iter-star(char-class(simple-charclass(present(conc(short("\\\\"),conc(short("\\|"),conc(short("\\$"),conc(short("\\*"),conc(short("\\+"),conc(short("\\?"),conc(short("\\."),conc(short("\\{"),conc(short("\\}"),conc(short("\\("),conc(short("\\)"),conc(short("\\&"),conc(short("\\]"),conc(short("\\-"),conc(short("\\["),conc(short("\\^"),conc(short("\\!"),conc(short("\\#"),conc(short("\\%"),conc(short("\\'"),conc(short("\\,"),conc(short("\\:"),conc(short("\\;"),conc(short("\\<"),conc(short("\\="),conc(short("\\>"),conc(short("\\@"),conc(short("\\_"),conc(short("\\`"),conc(short("\\~"),conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\t"),conc(short("\\n"),short("\\r"))))))))))))))))))))))))))))))))))))))))],sort("AllChars"),no-attrs),prod([lit("\"/\"")],sort("AllChars"),no-attrs),prod([lit("\"\\\"\"")],sort("AllChars"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"DoubleQuote\""))])))])),prod([lit("\"i\"")],sort("Modifier"),no-attrs),prod([lit("\"g\"")],sort("Modifier"),no-attrs),prod([lit("\"m\"")],sort("Modifier"),no-attrs),prod([iter-star(sort("Modifier"))],sort("Modifiers"),no-attrs)])),sorts([sort("BracketCharacter"),sort("AtomCharacter")])),context-free-syntax([prod([lit("\"\\\"\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"DoubleQuote\""))])))])),prod([lit("\"\\\"\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"DoubleQuote\""))])))]))])),context-free-syntax([prod([lit("\"\\\\0\""),sort("OctalValue")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"OctalChar\""))])))])),prod([lit("\"\\\\x\""),sort("TwoHexValue")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"HexHexChar\""))])))])),prod([lit("\"\\\\u\""),sort("FourHexValue")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"DecHexChar\""))])))])),prod([lit("\"\\\\t\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Tab\""))])))])),prod([lit("\"\\\\n\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Newline\""))])))])),prod([lit("\"\\\\r\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Return\""))])))])),prod([lit("\"\\\\f\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Formfeed\""))])))])),prod([lit("\"\\\\a\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Alarm\""))])))])),prod([lit("\"\\\\e\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Escape\""))])))])),prod([lit("\"\\\\w\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"WordChar\""))])))])),prod([lit("\"\\\\W\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NonWordChar\""))])))])),prod([lit("\"\\\\s\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"WhiteSpaceChar\""))])))])),prod([lit("\"\\\\S\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NonWhiteSpaceChar\""))])))])),prod([lit("\"\\\\d\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"DigitChar\""))])))])),prod([lit("\"\\\\D\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NonDigitChar\""))])))])),prod([lit("\"\\\\c\""),sort("ControlValue")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ControlCharacter\""))])))])),prod([lit("\"\\\\b\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"WordBoundry\""))])))])),prod([lit("\"\\\\B\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NonWordBoundry\""))])))])),prod([lit("\"\\\\A\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"InputBeginBoundry\""))])))])),prod([lit("\"\\\\G\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PrevMatchEndBoundry\""))])))])),prod([lit("\"\\\\Z\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"EndInputBoundry\""))])))])),prod([lit("\"\\\\z\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"EndInputFinalBoundry\""))])))])),prod([lit("\"\\\\\""),sort("BackReference")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"BackReference\""))])))])),prod([lit("\"\\\\ \"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Space\""))])))])),prod([lit("\"\\\\\\t\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Tab\""))])))])),prod([lit("\"\\\\\\n\"")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Newline\""))])))])),prod([lit("\"\\\\0\""),sort("OctalValue")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"OctalChar\""))])))])),prod([lit("\"\\\\x\""),sort("TwoHexValue")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"HexHexChar\""))])))])),prod([lit("\"\\\\u\""),sort("FourHexValue")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"DecHexChar\""))])))])),prod([lit("\"\\\\t\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Tab\""))])))])),prod([lit("\"\\\\n\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Newline\""))])))])),prod([lit("\"\\\\r\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Return\""))])))])),prod([lit("\"\\\\f\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Formfeed\""))])))])),prod([lit("\"\\\\a\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Alarm\""))])))])),prod([lit("\"\\\\e\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Escape\""))])))])),prod([lit("\"\\\\w\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"WordChar\""))])))])),prod([lit("\"\\\\W\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NonWordChar\""))])))])),prod([lit("\"\\\\s\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"WhiteSpaceChar\""))])))])),prod([lit("\"\\\\S\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NonWhiteSpaceChar\""))])))])),prod([lit("\"\\\\d\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"DigitChar\""))])))])),prod([lit("\"\\\\D\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NonDigitChar\""))])))])),prod([lit("\"\\\\c\""),sort("ControlValue")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"ControlCharacter\""))])))])),prod([lit("\"\\\\b\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"WordBoundry\""))])))])),prod([lit("\"\\\\B\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"NonWordBoundry\""))])))])),prod([lit("\"\\\\A\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"InputBeginBoundry\""))])))])),prod([lit("\"\\\\G\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"PrevMatchEndBoundry\""))])))])),prod([lit("\"\\\\Z\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"EndInputBoundry\""))])))])),prod([lit("\"\\\\z\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"EndInputFinalBoundry\""))])))])),prod([lit("\"\\\\\""),sort("BackReference")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"BackReference\""))])))])),prod([lit("\"\\\\ \"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Space\""))])))])),prod([lit("\"\\\\\\t\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Tab\""))])))])),prod([lit("\"\\\\\\n\"")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Newline\""))])))]))])),sorts([sort("QuotablePatternSymbol")])),context-free-syntax([prod([lit("\"\\\\\""),sort("QuotablePatternSymbol")],sort("AtomCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Quoted\""))])))])),prod([lit("\"\\\\\""),sort("QuotablePatternSymbol")],sort("BracketCharacter"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"Quoted\""))])))]))])),lexical-syntax([prod([char-class(simple-charclass(present(conc(short("\\|"),conc(short("\\$"),conc(short("\\*"),conc(short("\\+"),conc(short("\\?"),conc(short("\\."),conc(short("\\{"),conc(short("\\}"),conc(short("\\("),conc(short("\\)"),conc(short("\\&"),conc(short("\\]"),conc(short("\\["),conc(short("\\-"),conc(short("\\^"),conc(short("\\\\"),conc(short("\\!"),conc(short("\\#"),conc(short("\\%"),conc(short("\\'"),conc(short("\\,"),conc(short("\\:"),conc(short("\\;"),conc(short("\\<"),conc(short("\\="),conc(short("\\>"),conc(short("\\@"),conc(short("\\_"),conc(short("\\`"),conc(short("\\~"),short("\\/"))))))))))))))))))))))))))))))))))],sort("QuotablePatternSymbol"),no-attrs)])),context-free-syntax([prod([lit("\"\\\"\"")],sort("QuotablePatternSymbol"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"DoubleQuote\""))])))])),prod([lit("\"\\\"\"")],sort("QuotablePatternSymbol"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"DoubleQuote\""))])))]))])),sorts([sort("Integer"),sort("OctalValue"),sort("TwoHexValue"),sort("FourHexValue"),sort("BackReference"),sort("ControlValue")])),lexical-syntax([prod([iter(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("Integer"),no-attrs),prod([char-class(simple-charclass(present(range(short("1"),short("9"))))),iter-star(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("BackReference"),no-attrs),prod([char-class(simple-charclass(present(range(short("0"),short("7")))))],sort("OctalValue"),no-attrs),prod([char-class(simple-charclass(present(range(short("0"),short("7"))))),char-class(simple-charclass(present(range(short("0"),short("7")))))],sort("OctalValue"),no-attrs),prod([char-class(simple-charclass(present(range(short("0"),short("3"))))),char-class(simple-charclass(present(range(short("0"),short("7"))))),char-class(simple-charclass(present(range(short("0"),short("7")))))],sort("OctalValue"),no-attrs),prod([char-class(simple-charclass(present(conc(range(short("0"),short("9")),conc(range(short("A"),short("F")),range(short("a"),short("f"))))))),char-class(simple-charclass(present(conc(range(short("0"),short("9")),conc(range(short("A"),short("F")),range(short("a"),short("f")))))))],sort("TwoHexValue"),no-attrs),prod([char-class(simple-charclass(present(conc(range(short("0"),short("9")),conc(range(short("A"),short("F")),range(short("a"),short("f"))))))),char-class(simple-charclass(present(conc(range(short("0"),short("9")),conc(range(short("A"),short("F")),range(short("a"),short("f"))))))),char-class(simple-charclass(present(conc(range(short("0"),short("9")),conc(range(short("A"),short("F")),range(short("a"),short("f"))))))),char-class(simple-charclass(present(conc(range(short("0"),short("9")),conc(range(short("A"),short("F")),range(short("a"),short("f")))))))],sort("FourHexValue"),no-attrs),prod([char-class(simple-charclass(present(range(short("0"),short("9")))))],sort("ControlValue"),no-attrs),prod([char-class(simple-charclass(present(range(short("0"),short("9"))))),char-class(simple-charclass(present(range(short("0"),short("9")))))],sort("ControlValue"),no-attrs)])),sorts([sort("RegexId"),sort("RegexID")])),context-free-syntax([prod([sort("RegexID")],sort("RegexId"),attrs([term(default(appl(unquoted("cons"),[fun(quoted("\"RegexId\""))])))]))])),lexical-syntax([prod([char-class(simple-charclass(present(conc(range(short("A"),short("Z")),conc(range(short("a"),short("z")),conc(short("\\_"),short("\\$"))))))),iter-star(char-class(simple-charclass(present(conc(range(short("A"),short("Z")),conc(range(short("a"),short("z")),conc(range(short("0"),short("9")),conc(short("\\_"),short("\\$")))))))))],sort("RegexID"),no-attrs),prod([lit("\"true\"")],sort("RegexID"),attrs([reject])),prod([lit("\"false\"")],sort("RegexID"),attrs([reject])),prod([lit("\"null\"")],sort("RegexID"),attrs([reject]))])),lexical-restrictions([follow([sort("RegexID")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),conc(short("\\_"),short("\\$"))))))))))])))])